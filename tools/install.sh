#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è HTTP –∫–ª–∏–µ–Ω—Ç–∞
# –ê–≤—Ç–æ—Ä: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
# –í–µ—Ä—Å–∏—è: 1.0

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly NC='\033[0m' # No Color

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly TOOLS_DIR="${SCRIPT_DIR}/bin"
readonly GO_BIN="${GOPATH:-$HOME/go}/bin"

# –í–µ—Ä—Å–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç Makefile)
readonly GOLANGCI_LINT_VERSION="v1.61.0"
readonly GOSEC_VERSION="v2.18.2"
readonly GOVULNCHECK_VERSION="latest"
readonly STATICCHECK_VERSION="latest"
readonly NANCY_VERSION="v1.0.42"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ Go —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
check_go() {
    if ! command -v go &> /dev/null; then
        error "Go –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Go —Å https://golang.org/dl/"
    fi
    
    local go_version=$(go version | awk '{print $3}' | sed 's/go//')
    info "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Go –≤–µ—Ä—Å–∏–∏: $go_version"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
setup_tools_dir() {
    if [[ ! -d "$TOOLS_DIR" ]]; then
        mkdir -p "$TOOLS_DIR"
        info "–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: $TOOLS_DIR"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
is_tool_installed() {
    local tool_path="$1"
    [[ -f "$tool_path" && -x "$tool_path" ]]
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ go install
install_go_tool() {
    local name="$1"
    local package="$2"
    local version="${3:-latest}"
    local tool_path="${TOOLS_DIR}/${name}"
    
    if is_tool_installed "$tool_path"; then
        success "$name —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    fi
    
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ $name..."
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    local full_package="$package"
    if [[ "$version" != "latest" ]]; then
        full_package="${package}@${version}"
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if GOBIN="$TOOLS_DIR" go install "$full_package"; then
        success "$name —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $name"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ golangci-lint (–æ—Å–æ–±—ã–π —Å–ª—É—á–∞–π - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫)
install_golangci_lint() {
    local tool_path="${TOOLS_DIR}/golangci-lint"
    
    if is_tool_installed "$tool_path"; then
        success "golangci-lint —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    fi
    
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ golangci-lint $GOLANGCI_LINT_VERSION..."
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º golangci-lint
    local temp_dir=$(mktemp -d)
    local install_script="${temp_dir}/install.sh"
    
    if curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh > "$install_script"; then
        chmod +x "$install_script"
        if "$install_script" -b "$TOOLS_DIR" "$GOLANGCI_LINT_VERSION"; then
            success "golangci-lint —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        else
            error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å golangci-lint"
        fi
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ golangci-lint"
    fi
    
    rm -rf "$temp_dir"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nancy (–æ—Å–æ–±—ã–π —Å–ª—É—á–∞–π)
install_nancy() {
    local tool_path="${TOOLS_DIR}/nancy"
    
    if is_tool_installed "$tool_path"; then
        success "nancy —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    fi
    
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ nancy $NANCY_VERSION..."
    
    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É —Å–∏—Å—Ç–µ–º—ã
    local os=$(uname -s | tr '[:upper:]' '[:lower:]')
    local arch=$(uname -m)
    
    case "$arch" in
        x86_64) arch="amd64" ;;
        arm64|aarch64) arch="arm64" ;;
        *) error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $arch" ;;
    esac
    
    local download_url="https://github.com/sonatypecommunity/nancy/releases/download/${NANCY_VERSION}/nancy-${os}-${arch}"
    
    if curl -sSfL "$download_url" -o "$tool_path"; then
        chmod +x "$tool_path"
        success "nancy —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        warning "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å nancy. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º..."
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
verify_installation() {
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤..."
    
    local tools=(
        "golangci-lint:golangci-lint version"
        "staticcheck:staticcheck -version"
        "gosec:gosec -version"
        "govulncheck:govulncheck -version"
        "gofumpt:gofumpt -version"
        "goimports:goimports -version"
        "misspell:misspell -version"
        "gocyclo:gocyclo -version"
        "ineffassign:ineffassign -version"
    )
    
    local failed=0
    
    for tool_info in "${tools[@]}"; do
        local tool_name="${tool_info%%:*}"
        local version_cmd="${tool_info##*:}"
        local tool_path="${TOOLS_DIR}/${tool_name}"
        
        if is_tool_installed "$tool_path"; then
            # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
            local version_output
            if version_output=$("$tool_path" --version 2>&1 || "$tool_path" -version 2>&1 || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ") 2>/dev/null; then
                success "$tool_name —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ($(echo "$version_output" | head -1 | cut -d' ' -f1-3))"
            else
                success "$tool_name —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            fi
        else
            error "$tool_name –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            ((failed++))
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º nancy –æ—Ç–¥–µ–ª—å–Ω–æ (–º–æ–∂–µ—Ç –Ω–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è)
    local nancy_path="${TOOLS_DIR}/nancy"
    if is_tool_installed "$nancy_path"; then
        success "nancy —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        warning "nancy –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
    fi
    
    if [[ $failed -eq 0 ]]; then
        success "–í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
    else
        error "$failed –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è HTTP –∫–ª–∏–µ–Ω—Ç–∞"
    echo "======================================================"
    
    check_go
    setup_tools_dir
    
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤: $TOOLS_DIR"
    echo ""
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º golangci-lint —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
    install_golangci_lint
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ go install
    install_go_tool "staticcheck" "honnef.co/go/tools/cmd/staticcheck" "$STATICCHECK_VERSION"
    # –ü–†–ò–ú–ï–ß–ê–ù–ò–ï: gosec –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
    # install_go_tool "gosec" "github.com/securecodewarrior/gosec/v2/cmd/gosec" "$GOSEC_VERSION"
    install_go_tool "govulncheck" "golang.org/x/vuln/cmd/govulncheck" "$GOVULNCHECK_VERSION"
    install_go_tool "gofumpt" "mvdan.cc/gofumpt" "latest"
    install_go_tool "goimports" "golang.org/x/tools/cmd/goimports" "latest"
    install_go_tool "misspell" "github.com/client9/misspell/cmd/misspell" "latest"
    install_go_tool "gocyclo" "github.com/fzipp/gocyclo/cmd/gocyclo" "latest"
    install_go_tool "ineffassign" "github.com/gordonklaus/ineffassign" "latest"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nancy (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    install_nancy
    
    echo ""
    verify_installation
    
    echo ""
    success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã make –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–¥–∞."
    info "–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:"
    echo "  make lint-full     # –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏"
    echo "  make sast-full     # –ü–æ–ª–Ω—ã–π SAST –∞–Ω–∞–ª–∏–∑"
    echo "  make security-full # –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    echo "  make ci-full       # –ü–æ–ª–Ω–∞—è CI –ø—Ä–æ–≤–µ—Ä–∫–∞"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
