package main

import (
	"context"
	"fmt"
	"log"
	"net/http"
	"time"

	httpclient "gitlab.citydrive.tech/back-end/go/pkg/http-client"
)

func main() {
	fmt.Println("ü§ñ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è AI-Powered Error Insights")
	fmt.Println("=========================================")

	// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏ –∏ error insights
	client, err := httpclient.NewClient(
		httpclient.WithTimeout(2*time.Second),
		httpclient.WithMetrics(true),
		httpclient.WithMetricsMeterName("error-insights-demo"),
	)
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: %v", err)
	}

	fmt.Println("‚úÖ HTTP –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —Å AI-powered error insights")

	// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫

	// 1. –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ - –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ö–æ—Å—Ç
	fmt.Println("\nüß™ –¢–µ—Å—Ç 1: –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ (–Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ö–æ—Å—Ç)")
	_, err1 := client.Get("http://non-existent-host-12345.com")
	if err1 != nil {
		insight := client.AnalyzeLastError(context.Background())
		if insight != nil {
			printInsight("–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞", insight)
		}
	}

	// 2. –¢–∞–π–º–∞—É—Ç –æ—à–∏–±–∫–∞
	fmt.Println("\nüß™ –¢–µ—Å—Ç 2: –¢–∞–π–º–∞—É—Ç (–º–µ–¥–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä)")
	_, err2 := client.Get("http://httpbin.org/delay/5") // 5 —Å–µ–∫—É–Ω–¥, –Ω–æ —Ç–∞–π–º–∞—É—Ç 2 —Å–µ–∫—É–Ω–¥—ã
	if err2 != nil {
		insight := client.AnalyzeLastError(context.Background())
		if insight != nil {
			printInsight("–¢–∞–π–º–∞—É—Ç", insight)
		}
	}

	// 3. HTTP –æ—à–∏–±–∫–∏
	fmt.Println("\nüß™ –¢–µ—Å—Ç 3: –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (401)")
	resp3, _ := client.Get("http://httpbin.org/status/401")
	if resp3 != nil {
		defer resp3.Body.Close()
		insight := client.AnalyzeLastError(context.Background())
		if insight != nil {
			printInsight("401 Unauthorized", insight)
		}
	}

	fmt.Println("\nüß™ –¢–µ—Å—Ç 4: Rate Limit (429)")
	resp4, _ := client.Get("http://httpbin.org/status/429")
	if resp4 != nil {
		defer resp4.Body.Close()
		insight := client.AnalyzeLastError(context.Background())
		if insight != nil {
			printInsight("429 Rate Limit", insight)
		}
	}

	fmt.Println("\nüß™ –¢–µ—Å—Ç 5: –°–µ—Ä–≤–µ—Ä–Ω–∞—è –æ—à–∏–±–∫–∞ (500)")
	resp5, _ := client.Get("http://httpbin.org/status/500")
	if resp5 != nil {
		defer resp5.Body.Close()
		insight := client.AnalyzeLastError(context.Background())
		if insight != nil {
			printInsight("500 Server Error", insight)
		}
	}

	// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤–∏–ª
	fmt.Println("\nüß™ –¢–µ—Å—Ç 6: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –ø—Ä–∞–≤–∏–ª–æ –∞–Ω–∞–ª–∏–∑–∞")
	analyzer := client.GetErrorInsightsAnalyzer()

	// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è API endpoints
	customRule := httpclient.ErrorAnalysisRule{
		Name: "custom_json_api_error",
		Condition: func(req *http.Request, resp *http.Response, err error) bool {
			return resp != nil && resp.StatusCode == 422 &&
				req.Header.Get("Content-Type") == "application/json"
		},
		Insight: func(req *http.Request, resp *http.Response, err error) *httpclient.ErrorInsight {
			return &httpclient.ErrorInsight{
				Category:    httpclient.ErrorCategoryClientError,
				Title:       "JSON API –í–∞–ª–∏–¥–∞—Ü–∏—è",
				Description: "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ JSON –¥–∞–Ω–Ω—ã—Ö –≤ API –∑–∞–ø—Ä–æ—Å–µ",
				Severity:    "high",
				Suggestions: []string{
					"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ö–µ–º—É JSON –¥–∞–Ω–Ω—ã—Ö",
					"–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç",
					"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ–ª—è—Ö",
				},
				RetryAdvice: "–ò—Å–ø—Ä–∞–≤—å—Ç–µ JSON –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º",
				TechnicalDetails: map[string]interface{}{
					"rule_type": "custom_json_validation",
					"endpoint":  req.URL.String(),
				},
				Timestamp: time.Now(),
			}
		},
	}

	analyzer.AddCustomRule(customRule)
	fmt.Println("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è JSON API –≤–∞–ª–∏–¥–∞—Ü–∏–∏")

	// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
	fmt.Println("\nüìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∞–Ω–∞–ª–∏–∑–∞:")
	categories := analyzer.GetSupportedCategories()
	for _, category := range categories {
		enabled := analyzer.IsCategoryEnabled(category)
		status := "–≤–∫–ª—é—á–µ–Ω–∞"
		if !enabled {
			status = "–æ—Ç–∫–ª—é—á–µ–Ω–∞"
		}
		fmt.Printf("  üìÅ %s: %s\n", category, status)
	}

	// –û—Ç–∫–ª—é—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é timeout
	analyzer.DisableCategory(httpclient.ErrorCategoryTimeout)
	fmt.Println("\n‚ö†Ô∏è  –û—Ç–∫–ª—é—á–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è 'timeout'")

	fmt.Println("\n‚ú® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è AI-Powered Error Insights –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
	fmt.Println("üéØ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:")
	fmt.Println("  ‚úì –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫")
	fmt.Println("  ‚úì –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Å–æ–≤–µ—Ç—ã")
	fmt.Println("  ‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –∞–Ω–∞–ª–∏–∑–∞")
	fmt.Println("  ‚úì –ì–∏–±–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")
}

func printInsight(testName string, insight *httpclient.ErrorInsight) {
	fmt.Printf("üìã –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏: %s\n", testName)
	fmt.Printf("   üè∑Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è: %s\n", insight.Category)
	fmt.Printf("   üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫: %s\n", insight.Title)
	fmt.Printf("   üìñ –û–ø–∏—Å–∞–Ω–∏–µ: %s\n", insight.Description)
	fmt.Printf("   ‚ö†Ô∏è  –°–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å: %s\n", insight.Severity)
	fmt.Printf("   üîÑ –°–æ–≤–µ—Ç –ø–æ –ø–æ–≤—Ç–æ—Ä–∞–º: %s\n", insight.RetryAdvice)

	if len(insight.Suggestions) > 0 {
		fmt.Printf("   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n")
		for i, suggestion := range insight.Suggestions {
			fmt.Printf("      %d. %s\n", i+1, suggestion)
		}
	}

	if len(insight.TechnicalDetails) > 0 {
		fmt.Printf("   üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏:\n")
		for key, value := range insight.TechnicalDetails {
			fmt.Printf("      %s: %v\n", key, value)
		}
	}
	fmt.Println()
}
